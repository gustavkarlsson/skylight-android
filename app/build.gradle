apply plugin: "com.android.application"
apply plugin: "com.neenbedankt.android-apt"
apply plugin: "realm-android"
apply plugin: "me.tatarka.retrolambda"

repositories {
	maven {
		url "https://s3.amazonaws.com/repo.commonsware.com"
	}
	maven {
		url "https://jitpack.io"
	}
	maven {
		url "https://oss.sonatype.org/content/repositories/snapshots"
	}
}

android {
	compileSdkVersion 24
	buildToolsVersion "24.0.3"

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}

	defaultConfig {
		applicationId "se.gustavkarlsson.aurora_notifier.android"
		minSdkVersion 19
		targetSdkVersion 24
		versionCode 1
		versionName "1.0"
	}
	buildTypes {
		release {
			minifyEnabled true
			proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
		}

		debug {
			applicationIdSuffix ".debug"
		}
	}
	lintOptions {
		// use this line to check all rules except those listed
		disable "InvalidPackage"
		void
	}
}

retrolambda {
	jvmArgs "-noverify"
}

configurations {
	compile.exclude module: "stax"
	compile.exclude module: "stax-api"
	compile.exclude module: "xpp3"
}

// Stops dagger compiler errors from truncating
gradle.projectsEvaluated {
	tasks.withType(JavaCompile) {
		options.compilerArgs << "-Xmaxerrs" << "500"
	}
}

dependencies {
	ext {
		retrofitVersion = "2.1.0"
		parcelerVersion = "1.1.5"
		streamsupportVersion = "1.5.3"
		daggerVersion = "2.8"
		powermockVersion = "1.6.5"
		googlePlayServicesVersion = "10.0.1"
		butterKnifeVersion = "8.5.1"
	}
	compile "com.android.support:appcompat-v7:24.2.1"
	compile "com.google.android.gms:play-services-location:" + googlePlayServicesVersion
	compile "com.google.android.gms:play-services-gcm:" + googlePlayServicesVersion

	compile "com.github.gustavkarlsson:aurora-notifier-common:aurora-notifier-common-1.5.0"
	compile "org.simpleframework:simple-xml:2.7.1"
	compile "net.e175.klaus:solarpositioning:0.0.9"
	compile "com.android.support:design:24.2.1"
	compile "com.jakewharton:disklrucache:2.0.2"
	compile "com.google.guava:guava:20.0" // Skip v21 as it doesn't work well with android. v22 should though

	// Retrofit
	compile "com.squareup.retrofit2:retrofit:" + retrofitVersion
	compile "com.squareup.retrofit2:converter-gson:" + retrofitVersion
	compile "com.squareup.retrofit2:converter-simplexml:" + retrofitVersion

	// Parceler
	compile "org.parceler:parceler-api:" + parcelerVersion
	apt "org.parceler:parceler:" + parcelerVersion

	// Stream support
	compile "net.sourceforge.streamsupport:streamsupport:" + streamsupportVersion
	compile "net.sourceforge.streamsupport:streamsupport-cfuture:" + streamsupportVersion
	compile "net.sourceforge.streamsupport:streamsupport-atomic:" + streamsupportVersion
	compile "net.sourceforge.streamsupport:streamsupport-flow:" + streamsupportVersion
	compile "net.sourceforge.streamsupport:streamsupport-literal:" + streamsupportVersion

	// Dagger
	compile "com.google.dagger:dagger:" + daggerVersion
	apt "com.google.dagger:dagger-compiler:" + daggerVersion
	provided "javax.annotation:jsr250-api:1.0"

	// Testing
	testCompile "junit:junit:4.12"
	testCompile "org.mockito:mockito-core:1.10.19"
	testCompile "commons-io:commons-io:2.4"
	testCompile "org.assertj:assertj-core:2.5.0"
	testCompile "org.robolectric:robolectric:3.2.2"
	testCompile "org.powermock:powermock-api-mockito:" + powermockVersion
	testCompile "org.powermock:powermock-module-junit4-rule-agent:" + powermockVersion
	testCompile "org.powermock:powermock-module-junit4-rule:" + powermockVersion
	testCompile "org.powermock:powermock-module-junit4:" + powermockVersion
}
