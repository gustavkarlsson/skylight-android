[versions]

# Tooling
androidGradlePlugin = "8.11.0"
jgit = "6.10.0.202406032230-r"
kotlin = "2.1.0" # Must match ksp version
ktlintGradle = "11.6.1"
playPublisher = "3.10.1"

# App
androidActivity = "1.10.0"
androidAnnotation = "1.9.1"
androidAppcompat = "1.7.0"
androidCore = "1.15.0"
androidLifecycle = "2.8.7"
androidWorkManager = "2.10.0"
arrow = "1.2.4"
assent = "3.0.2"
atomicfu = "0.25.0"
composeBom = "2025.01.00"
composeConstraintLayout = "1.1.0"
conveyor = "cc93e41adc" # TODO use release version
firebaseBom = "33.8.0"
crashlyticsGradle = "3.0.2" # Make sure this matches the bom: https://firebase.google.com/support/release-notes/android
dataStore = "1.1.2"
googleServices = "4.4.2"
kotlinDateTime = "0.6.1"
ksp = "2.1.0-1.0.29" # Must match Kotlin version
kotlinInject = "0.7.2"
kotlinxCoroutines = "1.9.0"
kotlinxSerialization = "1.6.3" # TODO Upgrade after updating Kotlin to 2.0+
leakcanary = "2.14"
logcat = "0.1"
mapboxServices = "7.3.1"
markwon = "4.6.2"
okHttp = "4.12.0"
playServicesGcm = "17.0.0"
playServicesLocation = "21.3.0"
protobuf = "4.27.3"
protobufGradle = "0.9.4"
retrofit = "2.11.0"
solarPositioning = "0.0.9"
sqldelight = "1.5.4" # TODO Upgrade to 2.x
store = "5.0.0"
textref = "1.3.1"

# Test
junit = "4.13.2"
assertk = "0.10"
commonsIo = "2.13.0"

[libraries]
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidActivity" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidAnnotation" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidAppcompat" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidCore" }
androidx-datastore = { module = "androidx.datastore:datastore", version.ref = "dataStore" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "dataStore" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidLifecycle" }
androidx-workmanager-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "androidWorkManager" }
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
assent-coroutines = { module = "com.afollestad.assent:coroutines", version.ref = "assent" }
assertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk" }
atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }
commonsio = { module = "commons-io:commons-io", version.ref = "commonsIo" }
compose-animation = { module = "androidx.compose.animation:animation" }
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
compose-foundation = { module = "androidx.compose.foundation:foundation" }
compose-material = { module = "androidx.compose.material:material" }
compose-material-icons-core = { module = "androidx.compose.material:material-icons-core" }
compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended" }
compose-runtime = { module = "androidx.compose.runtime:runtime" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
constraintlayout-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "composeConstraintLayout" }
conveyor-core = { module = "com.github.gustavkarlsson.conveyor:conveyor-core", version.ref = "conveyor" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-crashlytics-ktx = { module = "com.google.firebase:firebase-crashlytics-ktx" }
junit = { module = "junit:junit", version.ref = "junit" }
kotlin-inject-compiler = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "kotlinInject" }
kotlin-inject-runtime = { module = "me.tatarka.inject:kotlin-inject-runtime", version.ref = "kotlinInject" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlinxCoroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinDateTime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
leakcanary-android = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }
logcat = { module = "com.squareup.logcat:logcat", version.ref = "logcat" }
mapbox-services = { module = "com.mapbox.mapboxsdk:mapbox-sdk-services", version.ref = "mapboxServices" }
markwon-core = { module = "io.noties.markwon:core", version.ref = "markwon" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp" }
play-services-gcm = { module = "com.google.android.gms:play-services-gcm", version.ref = "playServicesGcm" }
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
protobuf-javalite = { module = "com.google.protobuf:protobuf-javalite", version.ref = "protobuf" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-kotlinx-serialization = { module = "com.squareup.retrofit2:converter-kotlinx-serialization", version.ref = "retrofit" }
solarpositioning = { module = "net.e175.klaus:solarpositioning", version.ref = "solarPositioning" }
sqldelight-android-driver = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-coroutines-extensions = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
store = { module = "org.mobilenativefoundation.store:store5", version.ref = "store" }
textref = { module = "com.github.ioki-mobility:TextRef", version.ref = "textref" }

# Builds
jgit = { module = "org.eclipse.jgit:org.eclipse.jgit", version.ref = "jgit" }

[plugins]
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
protobuf = { id = "com.google.protobuf", version.ref = "protobufGradle" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlintGradle" }
sqldelight = { id = "com.squareup.sqldelight", version.ref = "sqldelight" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
googleservices = { id = "com.google.gms.google-services", version.ref = "googleServices" }
crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlyticsGradle" }
playpublisher = { id = "com.github.triplet.play", version.ref = "playPublisher" }

[bundles]
sqldelight = ["sqldelight-android-driver", "sqldelight-coroutines-extensions"]
retrofit = ["retrofit", "retrofit-kotlinx-serialization", "kotlinx-serialization-json"]
store = ["store", "atomicfu"]
