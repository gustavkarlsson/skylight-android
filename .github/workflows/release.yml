name: Release

on:
  workflow_dispatch:
    inputs:
      versionNumber:
        description: Version number
        required: true
        default: x.y.z
      createTag:
        description: Create tag
        required: true
        type: boolean
        default: true

jobs:
  test:
    name: Release
    runs-on: ubuntu-20.04
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 17

      - name: Decode google-services.json from secrets
        env:
          GOOGLE_SERVICES_JSON_BASE64: ${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}
        run: echo "$GOOGLE_SERVICES_JSON_BASE64" | base64 --decode > app/google-services.json

      - name: Decode play-service-account.json from secrets
        env:
          PLAY_SERVICE_ACCOUNT_JSON_BASE64: ${{ secrets.PLAY_SERVICE_ACCOUNT_JSON_BASE64 }}
        run: echo "$PLAY_SERVICE_ACCOUNT_JSON_BASE64" | base64 --decode > app/play-service-account.json

      - name: Decode release keystore from secrets
        env:
          RELEASE_KEYSTORE_BASE64: ${{ secrets.RELEASE_KEYSTORE_BASE64 }}
        run: echo "$RELEASE_KEYSTORE_BASE64" | base64 --decode > /tmp/android.jks

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Run checks
        run: ./gradlew check

      - name: Create tag
        if: ${{ github.event.inputs.createTag }}
        env:
          TAG_NAME: ${{ github.event.inputs.versionNumber }}
        run: |
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"

      - name: Run publish
        env:
          ORG_GRADLE_PROJECT_version_name: ${{ github.event.inputs.versionNumber }}
          ORG_GRADLE_PROJECT_android_store_file: /tmp/android.jks
          ORG_GRADLE_PROJECT_android_store_password: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          ORG_GRADLE_PROJECT_android_key_alias: ${{ secrets.RELEASE_KEY_ALIAS }}
          ORG_GRADLE_PROJECT_android_key_password: ${{ secrets.RELEASE_KEY_PASSWORD }}
          ORG_GRADLE_PROJECT_mapbox_api_key: ${{ secrets.MAPBOX_API_KEY }}
          ORG_GRADLE_PROJECT_openweathermap_api_key: ${{ secrets.OPENWEATHERMAP_API_KEY }}
        run: ./gradlew publishProductionReleaseApps

      - name: Upload bundle
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: skylight-${{ github.event.inputs.versionNumber }}
          path: ${{ github.workspace }}/app/build/outputs/bundle/*
